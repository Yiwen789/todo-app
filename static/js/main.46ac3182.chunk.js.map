{"version":3,"sources":["components/todo/AuthenticationService.js","components/todo/AuthenticatedRoute.js","components/todo/LoginComponent.js","api/todo/TodoDataService.js","components/todo/ListTodosComponent.js","components/todo/ErrorComponent.js","components/todo/HeaderComponent.js","components/todo/FooterComponent.js","components/todo/LogoutComponent.js","api/todo/HelloWorldService.js","components/todo/WelcomeComponent.js","components/todo/TodoComponent.js","components/todo/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["username","password","console","log","sessionStorage","setItem","removeItem","getItem","user","AuthenticatedRoute","AuthenticationService","isUserLoggedIn","this","props","to","Component","LoginComponent","state","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","registerSuccessfulLogin","history","push","className","type","onChange","onClick","axios","get","id","delete","todo","put","post","ListTodosComponent","todos","message","deleteTodoClicked","updateTodoClicked","addTodoClicked","refreshTodos","nextProps","nextState","getLoggedInUserName","TodoDataService","retrieveAllTodos","then","response","data","deleteTodo","class","map","description","done","toString","moment","targetDate","format","ErrorComponent","HeaderComponent","href","logout","FooterComponent","LogoutComponent","WelcomeComponent","welcomeMessage","retrieveWelcomeMessage","handleSuccesfulResponse","handleError","match","params","HelloWorldService","executeHelloWorldPathVariableService","catch","error","TodoComponent","Date","onSubmit","validate","retrieveTodo","values","errors","length","isValid","createTodo","updateTodo","initialValues","validateOnChange","validateOnBlur","enableReinitialize","component","TodoApp","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ac3182.chunk.js","sourcesContent":["class AuthenticationService {\n\n  registerSuccessfulLogin(username,password){\n      console.log('registerSuccessfulLogin')\n      sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n      sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n      let user = sessionStorage.getItem('authenticatedUser')\n      if(user===null) return false\n      return true\n  }\n\n  getLoggedInUserName() {\n      let user = sessionStorage.getItem('authenticatedUser')\n      if(user===null) return ''\n      return user\n  }\n}\n\nexport default new AuthenticationService()\n","import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass AuthenticatedRoute extends Component {    \n    render() {\n        if(AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props}/>\n        } else {\n            return <Redirect to=\"/login\"/>\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute;\n","import React, {Component} from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n    \n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            username: 'helloworld',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                  :event.target.value\n            }\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    loginClicked() {\n        //in28minutes,dummy\n        if((this.state.username==='in28minutes' && this.state.password==='dummy') || this.state.password===''){\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n            this.props.history.push(`/welcome/${this.state.username}`)\n            //this.setState({showSuccessMessage:true})\n            //this.setState({hasLoginFailed:false})\n        }\n        else {\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password}  onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;\n","import axios from 'axios'\n\nclass TodoDataService {\n    retrieveAllTodos(name) {\n        //console.log('executed service')\n        return axios.get(`http://localhost:8080/users/${name}/todos`);\n    }\n\n    retrieveTodo(name, id) {\n        //console.log('executed service')\n        return axios.get(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    deleteTodo(name, id) {\n        //console.log('executed service')\n        return axios.delete(`http://localhost:8080/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        //console.log('executed service')\n        return axios.put(`http://localhost:8080/users/${name}/todos/${id}`, todo);\n    }\n\n    createTodo(name, todo) {\n        //console.log('executed service')\n        return axios.post(`http://localhost:8080/users/${name}/todos/`, todo);\n    }\n\n}\n\nexport default new TodoDataService()\n","import React, {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodosComponent extends Component {\n\n    constructor(props){\n        console.log('constructor')\n        super(props)\n        this.state = {\n            todos : [],\n            message : null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)   \n        this.updateTodoClicked = this.updateTodoClicked.bind(this)   \n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.refreshTodos();\n        console.log(this.state)\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n          .then(\n              response => {\n                  //console.log(response);\n                  this.setState({todos : response.data})\n              }\n          ) \n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n         .then (\n             response => {\n                this.setState({message : `Delete of todo ${id} Successful`})\n                this.refreshTodos()\n             }\n         )\n        \n    }\n\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    updateTodoClicked(id) {\n        console.log('update ' + id)\n        this.props.history.push(`/todos/${id}`)\n        // /todos/${id}\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id + \" \" + username);\n        // TodoDataService.deleteTodo(username, id)\n        //  .then (\n        //      response => {\n        //         this.setState({message : `Delete of todo ${id} Successful`})\n        //         this.refreshTodos()\n        //      }\n        //  )\n        \n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div>\n                 <h1>List Todos</h1>\n                 {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                 <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>IsCompleted?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.todos.map (\n                                todo =>\n                                    <tr key={todo.id}>\n                                        <td>{todo.description}</td>\n                                        <td>{todo.done.toString()}</td>\n                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                        <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                        <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                    </tr>\n                            )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent\n","import React from 'react'\n\nfunction ErrorComponent() {\n    return <div>An Error Occurred. I don't know what to do! Contact support at abcd-efgh-ijkl</div>\n}\n\nexport default ErrorComponent","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\n\n\nclass HeaderComponent extends Component {\n    render() {\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        //console.log(isUserLoggedIn);\n\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"https://github.com/Yiwen789\" className=\"navbar-brand\">Wonder List</a></div>\n                    <ul className=\"navbar-nav\">\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/welcome/wonderlist\">Home</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/todos\">Todos</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default HeaderComponent\n","import React, {Component} from 'react'\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">Thank you for using! For more information please visit my <a href=\"https://github.com/Yiwen789\">GitHub</a></span>\n            </footer>\n        )\n    }\n}\n\nexport default FooterComponent","import React, {Component} from 'react';\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank You for Using Our Application.\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LogoutComponent;\n","//Connecting react with RespfulAPI\n\nimport axios from \"axios\";\n\nclass HelloWorldService {\n  executeHelloWorldService() {\n    return axios.get('http://localhost:8080/hello-world');\n  }\n\n  executeHelloWorldBeanService() {\n    return axios.get('http://localhost:8080/hello-world-bean');\n  }\n\n  executeHelloWorldPathVariableService(name) {\n    return axios.get(`http://localhost:8080/hello-world/path-variable/${name}`);\n  }\n  \n}\n\nexport default new HelloWorldService()","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport HelloWorldService from '../../api/todo/HelloWorldService';\n\n\nclass WelcomeComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        welcomeMessage: ''\n      }\n      this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this);\n      this.handleSuccesfulResponse = this.handleSuccesfulResponse.bind(this);\n      this.handleError = this.handleError.bind(this);\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Welcome!</h1>\n                <div className=\"container\">\n                Welcome {this.props.match.params.name}. You can manage your todos \n                <Link to=\"/todos\">here</Link>.\n                </div>\n\n                <div className=\"container\">\n                  Click here to get a customized welcome message\n                  <button onClick={this.retrieveWelcomeMessage}\n                  className=\"btn btn-success\">\n                    Get Welcome Message\n                  </button>\n                </div>\n\n                <div className=\"container\">\n                  {this.state.welcomeMessage}\n                </div>\n            </>\n        )        \n    }\n    \n    retrieveWelcomeMessage() {\n      // HelloWorldService.executeHelloWorldService()\n      // .then(response => this.handleSuccesfulResponse(response))\n\n      // HelloWorldService.executeHelloWorldBeanService()\n      // .then(response => this.handleSuccesfulResponse(response))\n\n      HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name) \n        .then(response => this.handleSuccesfulResponse(response))\n        .catch(error => this.handleError(error));\n    }\n\n    handleSuccesfulResponse(response) {\n      this.setState({\n        welcomeMessage: response.data.message\n      })\n    }\n\n    handleError(error) {\n      this.setState({\n        welcomeMessage: error.data.message\n      })\n    }\n}\n\n\nexport default WelcomeComponent;\n","import React, {Component} from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id : this.props.match.params.id,\n            description : '',\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if(this.state.id===-1) {\n            return\n        }\n        \n        let username = AuthenticationService.getLoggedInUserName()\n        \n        TodoDataService.retrieveTodo(username, this.state.id)\n             .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n             }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if(!values.description) {\n            errors.description = 'Enter a Description'\n        } else if(values.description.length<5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        if(!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.history.push('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.history.push('/todos'))\n        }\n        \n        console.log(values);\n    }\n\n    render() {\n        \n        let {description,targetDate} = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik \n                        initialValues={{description,targetDate}}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                \n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default TodoComponent\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport LoginComponent from './LoginComponent';\nimport ListTodosComponent from './ListTodosComponent';\nimport ErrorComponent from './ErrorComponent';\nimport HeaderComponent from './HeaderComponent';\nimport FooterComponent from './FooterComponent';\nimport LogoutComponent from './LogoutComponent';\nimport WelcomeComponent from './WelcomeComponent';\nimport TodoComponent from './TodoComponent';\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <>\n                        <HeaderComponent/>\n                        <Switch>\n                            <Route path=\"/\" exact component={LoginComponent}/>\n                            <Route path=\"/login\" component={LoginComponent}/>\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <AuthenticatedRoute path=\"/todos/:id\" component={TodoComponent}/>\n                            <AuthenticatedRoute path=\"/todos\" component={ListTodosComponent}/>\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\n                            \n                            <Route component={ErrorComponent}/>\n                        </Switch>\n                        <FooterComponent/>\n                    </>\n                </Router>\n                {/*<LoginComponent/>\n                <WelcomeComponent/>*/}\n            </div>\n        )\n    }\n}\n\nexport default TodoApp;\n","import React, { Component } from 'react';\nimport TodoApp from './components/todo/TodoApp';\nimport './App.css';\nimport './bootstrap.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n         {/*<Counter/>*/}\n         <TodoApp/>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}